name: Build

on:
  push:
  pull_request:


env:
  STEAM_TOKEN: ${{secrets.STEAM_TOKEN}}

jobs:
  lint:
    name: Linter
    environment: master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: 'latest'

  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - uses: actions/checkout@v4
      - run: make check

  test:
    runs-on: ubuntu-latest
    name: Test
    environment: master
    needs: [lint, staticcheck]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true

      - name: Test
        run: make test

  release:
    name: "tf2bdd release"
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - run: go mod tidy

      - uses: goreleaser/goreleaser-action@v6
        if: success() && startsWith(github.ref, 'refs/tags/v')
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload snapshot
        if: success() && ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v3
        with:
          name: snapshot
          path: build/*
          retention-days: 1